name: CI Build

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - develop
env:
  DATASET_NAME: bigquery_views_manager_ci
  DOCKER_COMPOSE_CI: docker compose -f docker-compose.yml -f docker-compose.ci.yml

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    concurrency:
      group: bigquery_views_manager_ci
    steps:
      - name: Set Version Env Var
        run: |
          VERSION=develop
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "VERSION: ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup GCP Secrets
        run: echo -n '${{ secrets.BIGQUERY_VIEWS_MANAGER_GCP }}' > ./credentials.json
      - name: Build Image and Run Tests
        run: make ci-build-and-test DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}'
      - name: Clean dataset
        run: make DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}' IMAGE_TAG=${{ github.sha }} REVISION=${{ github.sha }} DATASET_NAME=${{ env.DATASET_NAME }} ci-example-data-clean-dataset
      - name: Update dataset
        run: make DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}' IMAGE_TAG=${{ github.sha }} REVISION=${{ github.sha }} DATASET_NAME=${{ env.DATASET_NAME }} ci-example-data-update-dataset
      - name: Clean dataset
        if: ${{ always() }}
        run: make DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}' IMAGE_TAG=${{ github.sha }} REVISION=${{ github.sha }} DATASET_NAME=${{ env.DATASET_NAME }} ci-example-data-clean-dataset
      - name: Push package to test.pypi.org
        if: ${{ env.VERSION == 'develop' }}
        run: make DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}' IMAGE_TAG=${{ github.sha }} COMMIT=${{ github.sha }} NO_BUILD=y ci-push-testpypi
        env:
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_CREDENTIALS }}
      - name: Push package to pypi.org
        if: ${{ env.VERSION != 'develop' }}
        run: make DOCKER_COMPOSE_CI='${{ env.DOCKER_COMPOSE_CI }}' IMAGE_TAG=${{ github.sha }} COMMIT=${{ github.sha }} NO_BUILD=y ci-push-pypi
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_CREDENTIALS }}
